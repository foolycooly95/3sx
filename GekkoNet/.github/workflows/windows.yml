name: Windows Build

on:
  workflow_call: 

permissions:
  contents: write

jobs:
  build-windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        build_type: [static, shared]
        asio: [with_asio, no_asio]
        toolchain: [msvc, mingw]

    steps:
      - uses: actions/checkout@v4

      - name: Setup MSBuild (MSVC)
        if: matrix.toolchain == 'msvc'
        uses: microsoft/setup-msbuild@v1

      - name: Configure
        shell: bash
        run: |
          if [[ "${{ matrix.toolchain }}" == "mingw" ]]; then
            cmake -B build -G "Ninja" -DCMAKE_C_COMPILER=x86_64-w64-mingw32-gcc -DCMAKE_CXX_COMPILER=x86_64-w64-mingw32-g++ \
              -DCMAKE_BUILD_TYPE=Release \
              -DBUILD_SHARED_LIBS=${{ matrix.build_type == 'shared' && 'ON' || 'OFF' }} \
              -DNO_ASIO_BUILD=${{ matrix.asio == 'no_asio' && 'ON' || 'OFF' }}
          else
            cmake -B build -G "Ninja" -DCMAKE_BUILD_TYPE=Release \
              -DBUILD_SHARED_LIBS=${{ matrix.build_type == 'shared' && 'ON' || 'OFF' }} \
              -DNO_ASIO_BUILD=${{ matrix.asio == 'no_asio' && 'ON' || 'OFF' }}
          fi

      - name: Build
        shell: bash
        run: cmake --build build

      - name: Package
        shell: bash
        run: |
          pkg_dir="package/windows-${{ matrix.toolchain }}"
          mkdir -p "$pkg_dir"/{lib,include}
          find build -type f \( -name "*.lib" -o -name "*.dll" -o -name "*.a" \) -exec cp {} "$pkg_dir/lib/" \;
          cp GekkoLib/include/gekkonet.h "$pkg_dir/include/" || true

      - uses: actions/upload-artifact@v4
        with:
          name: windows-${{ matrix.toolchain }}-${{ matrix.build_type }}-${{ matrix.asio }}
          path: package/
